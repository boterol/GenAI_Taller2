Developer Spotlight: Dan Klaue (Thranda Design)

Conducted by Dominic Smith

Introduction

If you’ve spent any time in the X-Plane world, chances are you’ve flown something Dan Klaue has had a hand in. From his early days making tutorials to working with Carenado and Just Flight, and now running Thranda Design, Dan has played a huge role in shaping third-party aircraft development for X-Plane. But how did he get started, and what drives his approach to aircraft design? I had the chance to chat with Dan about his journey, his thoughts on the sim, and what’s next for Thranda.

Background and Early Days

Let’s start with a bit about you, Dan. How did you first get into flight simulation, and what eventually led you to X-Plane development?

I grew up in South America, with little access to computers. I had a classmate who had Microsoft Flight Simulator 5.0 on it… I think that was my first experience with flight simulation, as a teenager. Then I had a friend who had a Mac, and he had the F/A 18 Hornet sim by Graphic Simulations on it.  It wouldn’t be until I went to university a few years later that I was able to get my own (used) Mac (a Performa 6400 with 1 MB of VRAM and 16 MB of RAM), which I bought to learn about multi-track music production.  I found the F/A18 sim for it, but also found X-Plane, and was immediately in love with it, because I discovered Plane Maker!  I could BUILD planes! I had spent my younger years building balsa and styrofoam planes, and started getting into RC planes, but never had enough money to really go all-out, so X-Plane was just the most amazing discovery for me!  If I crashed a model plane in real life, I had to fix or re-build it, which I sunk a lot of time and money into, whereas in X-Plane, I could just reload the plane and keep going!  In fact, for the first few years I only used the free demo version of X-Plane, which allowed you to fly inside the demo area for 10 minutes at a time.  That was enough to test my builds. I was just into building more than into flying.

Do you have any real-life aviation experience? If so, could you share a bit about it?

In Ecuador, where I spent a big part of my childhood, missionary aviation was big, and I got rides in MAF planes a few times as a kid. I was especially inspired by the jungle pilots, as I heard many of their stories and adventures growing up, such as the story of Jim Elliott, Nate Saint, and their buddies, who ended up getting speared to death in the ‘50s by the Waorani on the banks of the Curaray River.  The movie “End of the Spear” recounts this internationally impactful ordeal, although a fair bit of artistic license was taken to make the film.  I also had several classmates whose dads were bush pilots. My dream was to become a bush pilot as well, but I had health issues that prevented me from seriously pursuing it.  I ended up taking a few flight lessons, but knew fairly early on that it wouldn’t really work for me, due to my health.  X-Plane opened up a new world for me… I was able to vicariously experience flight through this miracle of simulation!  This also drove me to learn a lot of things I had always found very interesting: 3D design, physics, programming, sound design, animation, texture art/Photoshop, innovation, etc.  It started out with a passion for flight, but X-Plane introduced me to a lot of things that I’ve ended up growing passionate about, and have been very fortunate to turn into a successful business.  I’d be doing this all day anyway, as a hobby, if I hadn’t found a way to earn a living doing this.  When I worked full-time in radio and TV production, X-Plane and learning the related disciplines occupied all my free time for 10 years.

You’ve been a big part of X-Plane development for a number of years now, working with Carenado, Just Flight, and now under your own brand, Thranda. What’s been the most rewarding part of that journey?

I think around 2009/2010 I started realizing that this could be more than a hobby for me. I used to design a lot of wacky and crazy flying contraptions, and I always thought, “How great is this? I can be my own Burt Rutan, and try out pretty much any idea that comes to mind!” I always spent more time in Plane Maker, Photoshop, and Blender, than actually flying.  It was so rewarding for me to just be innovative, and see my creations fly.

I was so excited about some of the things I was learning that I decided to start a tutorial series on YouTube.  I started getting a lot of encouragement from the community, and people seemed to show interest in purchasing the plane I had been building as an object lesson.  It took me a while to get used to the idea, but when I tallied up all the hours I had spent on that, I thought, it might make sense… here I was, showing people how they could do this for free (which might cost them 2000+ hours), or they could pay me $25 for the plane, where I went through the time, effort, and learning curve for them.  Their choice.  And it seemed justified to me. Before this, many people, including myself, couldn’t really understand why one would have to pay for an add-on… after all, it was “just” software.  But all the time and learning and expertise and discipline and risk that went into each plane ended up organically pointing at there being some intrinsic value in it.  At that time, X-Plane.org reached out to me and encouraged me to finish the plane and put it on the payware market.  That was where it began to become a viable business.  I never saw myself as much of a businessman or salesman, but it turns out that my tutorial series appears to have been a really effective advertisement for the product, and that’s when I gained a whole new perspective on business.  Whereas before, I thought I was no good at convincing people to buy stuff they don’t really need, I now felt that if you offered something that was in demand, that was good quality, and that helped place people’s dreams within reach, and you were able to make a living doing so, maybe there was something there!  That has been extremely rewarding. 

People would often tell me I was nuts for “giving away my trade secrets”.  I never saw it that way.  There was a story I was told, about a farmer that always won all the vegetable growing competitions. He had the largest squash, pumpkins, cucumbers, eggplants, peppers, cabbage, turnips, etc., and after the fair, he’d always spend some time freely handing out the seeds from his crops.  People thought he was crazy, and asked him, why he didn’t keep those seeds for himself.  He said, “Well, all these guys here are my neighbours.  Their vegetable fields are all within reach of the pollinating bees that also come to my field to pollinate my plants.  If they all have scrawny vegetables, due to bad genes, my plants will be negatively affected.”  Thus, effectively, though he came out on top, many others benefitted as well.  

It’s always been rewarding for me to blaze a new trail, and then share my experience with others, to de-mystify and help lower the bar to entry on creative pursuits.  Carenado said they found me through my tutorials, and Just Flight approached Thranda after they’d been searching for a way to take their MSFS projects to X-Plane, and saw that it seemed to work out pretty good with Carenado. 

Your aircraft are known for their unique features, particularly the dynamic liveries and interactive elements. How did these ideas come about, and what drives your approach to aircraft design?

I noticed that many people that had YouTube or Twitch streaming channels spent a fair amount of time of their stream just sitting on the Tarmac, exploring the aircraft.  They’d spend time clicking and scrolling and looking around, and whenever they found something interactive, it seemed as though that lit up the “Delight” annunciator light.  We once put a click spot and animation on a pen that was inside one of those metal spring pen holders under the glare shield. It had no further function, except that you could grab it and let it go, after which it was spring-loaded to re-center itself, kind of like one of those door stoppers.  Doinoinoing!  People loved playing with it! It was such a simple and pointless thing, but it got me thinking, that there’s a market for this.

Since planes in real life often span many decades of use, and during this time, they receive many customizations, especially to the panel, I started to notice that it would be interesting to offer more variations in the avionics.  This also seemed to be a common request our clients had: “My grandpa had this plane, and it was equipped with an Aspen EFD1000… can you make a version of the plane with this configuration?”  It was a fun challenge, and I thought, as long as it doesn’t kill FPS, we should try it.  It ended up also providing a different perspective to the development process and helped us streamline production.

For liveries, I started noticing that over time, the UV unwraps of planes were more and more unfriendly towards people that wanted to create custom liveries.  The newer authoring methods and PBR painting techniques favoured UV unwraps that had more consistent texel density, a more optimized use of the texture real-estate, and non-overlapping UVs over “Photoshop-friendly” repaint kits.  This made painting liveries by hand, without the source files, almost impossible. People kept asking for paint kits… but somehow it seemed as if that wouldn’t really help much, also because over time, developers went from painting flat textures to painting liveries in 3D.  What livery painters are increasingly asking for is, to have access to the 3D mesh, which is very understandable.  But since that’s an asset we spend a lot of time, money, and effort on, it is not something we would  too willingly give up… we’ve encountered plenty of abuses and plagiarism as it is.  So, we explored the possibility of applying different materials and colours to pre-designed templates, resulting in our dynamic livery creation tool, that allows for a great deal of variety in how the plane looks, without that the end-user has to use any external software.  We are hoping to continue building on this concept, to simplify, optimize, and expand the capabilities of dynamic liveries even more, maybe even make it easier to save these as a new (static) livery starting point.  Dirt/scratches layers, that can be dynamically faded in and out, also provide a lot more variation to the look and feel of the aircraft.

Thranda’s lineup includes a mix of GA aircraft, bush planes, and turboprops. How do you decide which aircraft to develop next? Does community feedback play a role in that process?

Community feedback definitely plays a role, although it often takes a while to get around to creating the planes people ask for.  Having collaborated in the release of over 90 planes, we have gotten a pretty good sense for what works and what doesn’t work, and sometimes that means rejecting certain suggestions from users because we know that when we did that particular model (or a very similar one), it didn’t do so well.  A lot of what we decide to publish is based on that.  What is requested on the forums is one thing, but many times, the actual market is a completely different beast.

Another determining factor is the availability of the source material.  If there is a plane we have relatively easy access to, if we can talk to pilots and mechanics, and are free to take pictures and get our hands on the POH and Manuals, that definitely has an impact on what we decide to build next.  Even if it may not be that popular, and doesn’t sell so well, sometimes that is offset by the fact that it’s not such a complex project to build.  There are definitely planes we have built that have not sold enough to recoup our initial investment on it. Once the organization grows to the point of having to pay consistent salaries, it becomes important to take these things into consideration, as every project becomes a risk.

Some planes fit better into the paradigm we are developing than others.  The PC12 had a lot of instruments and systems that had to be custom-made, which took quite a long time.  We are looking at focusing our next few projects on planes that make better use of the infrastructure we have built up so far, and we are working on optimizing the “assembly line”, as well as the upgradability of our fleet.  As our product line grows, it is becoming evident that we need to think more about how we want to go about improving, retrofitting, adapting, optimizing, and upgrading every plane, without that it costs us so much.  This requires some creative meta-solutions and innovations.

One thing that stands out in your work is your attention to detail, not just in the visuals, but in how your aircraft feel to fly. How do you strike the right balance between realism and usability in X-Plane?

For visuals, we are using 8k textures now, because XP12 allows for this.  I think in the X-Plane 7, 8, and 9 days, the texture sizes were really small: max. 1024x1024.  Video cards had very limited VRAM back then… 32 MB or so. If you were REALLY well off, you could afford a 64 MB video card.  As time went on, these numbers generally started to double.  With each doubling, you could afford lots more texture detail, with room to spare.  So, if you went from 64 to 128 MB of VRAM, the sim and its add-ons were not really such that they’d use up 100% of that new amount of VRAM… it’d take a while for a sim upgrade to come out, that would increase world details, weather, textures, etc., causing developers to follow suit with more detailed texture sets, even putting developers at an advantage, because they got all this new headroom that they could use to add more detail to their planes.  If you have a low-end card, say, 2 GB VRAM, X-Plane 12’s MINIMUM system requirements  might be met, but that’s it… no room for add-ons with more details.  If you upgrade nowadays, you are most likely to jump from 2 GB to something more like 8 - 16 GB of VRAM, which suddenly gives you a HUGE amount of headroom, which allows you to comfortably fly a plane that uses up 3 GB of VRAM… something you couldn’t do with your previous hardware.  And such a plane (like the PC-12) may be using four 8k textures for exterior visuals alone!  That is orders of magnitude more texel density than what we got back 10-20 years ago! (One 8k texture holds the same amount of information as 64 1024x1024 textures!)  So we try to “surf this wave”, and perhaps push the boundaries just a tad, because we know that eventually people will upgrade their hardware, and we don’t want our planes to immediately lose relevance.

X-Plane 12 also runs more efficiently than previous versions of X-Plane, so you can afford to use a higher texel density due to that. But X-Plane also features new techniques, that allow authors to add more detail where it matters, without costing extra VRAM.  And it seems to me that if you’re already able to simulate “orange peel” or “eggshell” texture surfaces using 8k normal maps, and new techniques are available to allow for even more detail, at some point, it’ll become silly to simulate microscopic details; even THAT, with PBR materials, the “roughness” value of the painted material corresponds to a microscopic-level simulation of how light would behave on rough surfaces, which has an effect on your perception of the material, although you never really have to zoom in to the level where you would be able to discern the actual microscopic detail that causes this effect.  So I do believe at some point we won’t go past a certain texture size… which is nice, because working with large textures can be unwieldy.

Newer hardware also simulates stuff like ray tracing, (reflections, caustics, refraction, etc) to draw scenarios many times per second today, which took hours, or even days to render in dedicated 3D software like Blender back in the day. It’s amazing that we get this (not ray-tracing… yet) in a gaming engine now, that runs at 60+ FPS, and we get access to these great real-time effects.  But this sort of detail is something that seems to be worked out more in the realm of the hardware and the sim developers, rather than being on add-on dev’s shoulders.  We just get to tap into it.

Flight dynamics are somewhat similar. X-Plane uses a simplified version of Computational Fluid Dynamics (CFD), called “Blade Element Theory”.  What is interesting here is, if you go back in history, this physics engine always had to keep real-time performance in mind… CFD historically, was way too intense to be used in a real-time gaming engine, often taking hours or days to compute certain fluid dynamics scenarios. The much simplified Blade Element Theory – based physics engine in X-Plane used to be a lot more imprecise back in the early days of X-Plane. You couldn’t even do a proper loop. Ground effect wasn’t taken into consideration, neither was propwash, P-factor, the turbulence effect from extended flaps on horizontal stabilizers, wake turbulence, etc.  With every version of X-Plane, more detail is added to the flight model and more scenarios are accounted for, and we just sort of piggy-back on that with our add-ons. In the past, we tried to introduce improvements on a per-plane level, but have since opted out, preferring to let Laminar handle those types of things. One notorious example was, that for many years, X-Plane’s prop torque effect was twice as strong as what would have been realistic.  After years of complaints, we tried to mitigate that ourselves, through a plugin override.  But then, one day, an end-user discovered (and PROVED to Austin) that the torque was not just calculated on the propeller, but also on the engine shaft, effectively providing evidence that X-Plane’s engine was exaggerating the torque effect.  When Laminar came out with a fix for this, most of our planes were affected, some even displaying the opposite torque effect of what they should have.  Since then, we are more likely to wait for Laminar to come out with improvements… although we DO sometimes see opportunities to improve on the realism currently provided by the sim, and act on it, if we deem it is a simple enough thing to disable, if Laminar ends up implementing the improvement we worked on.  

There are several cases where we implemented things that were not yet available in X-Plane, which Laminar then chose to develop and include by default in the aircraft.  For example, the G1000, fairly early on, and later, in 2019, we published a plane that had a start lock system, a procedure where you had to take the props out of feather mode after starting the engines. Without this feature, the checklist could not be followed.  Not long after we published this plane, Laminar developed and included this system in the sim by default.   We don’t have a hard rule about when we add details, but sometimes, if you can’t go through the checklist, or if the system is fairly easy to implement, we’ll just do it; although, in general, we prefer to wait for Laminar, especially after the experiences we’ve made in this regard.

Having said all this, we are happy to not go into as much detail as others, who brand themselves as “Study Level”, since we have also developed a certain synergistic relationship with other developers, such as SimCoders, who take our core products, and take them to a deeper level.  I think this is positive on several fronts: our products are more accessible to a broader audience, they are easier to maintain and upgrade, it allows us to move at a more rapid development pace (which is important, since the community moves on from one product after a few months, and starts looking for the next shiny new toy), and it makes for a bit more granularity. Some people might not care that much about systems depth, and are happy to have access to a more affordable product. Others can’t wait for the Reality Expansion Pack to come out, and are more than willing to pay for it.  It also allows another developer to set up shop on this platform, with a compelling, creative product.  It’s a win-win-win!

Given your deep experience with X-Plane’s flight model, have there been any unexpected challenges or surprises when translating real-world aircraft behaviour into the sim? Has there ever been a moment where you thought, I wish the sim had this, or I wish the sim didn’t have this?

Right now, there is something interesting coming up that seems related, which our team is currently working on.  X-Plane’s prop controls behave as though they’re always in an ideal world.  The max prop RPM is reached quite consistently, with minimal overshoot or seeking.  In real life, the oil’s temperature and viscosity would have an effect on how quickly the prop settles into its commanded RPM. This is something we are currently working on, and we are trying to make this logic module in such a manner that it is easily retrofittable into other planes.  Here, we also have to think about cleanly overriding X-Plane’s default behaviour, and ensuring that disabling this module will result in the plane functioning the way X-Plane’s default systems would dictate.  It is not certain if this might potentially be a feature where Laminar goes, “Oh! Great idea! We should implement this sim-wide by default!”  It’s happened a lot to us before… and in the past, often it would “break” our planes.  We are learning how to make our overrides and changes less intrusive, and end-user configurable, in case Laminar comes up with their own solution to this.

I wish the sim had a more optimized developer mode.  Working on planes usually means, you’re REALLY honing in on one TINY aspect of the whole, like some texture detail or a bit of autopilot logic that you want to tweak and get tuned just right… but every time you make a change, you have to restart the entire plane, which, on a plane with 8k textures can take a long time.  I wish we had more control over, for instance, refreshing only certain objects or textures, or reloading only individual plugin sub-modules. I often find that as you wait for your plane to reload, you quickly check your email or social media, you want to load up a YouTube playlist or something, and end up getting distracted. By the time you’re back, you’ve wasted a lot of time.  It’d be really neat to have a mode, where it would refresh the specific thing you’re working on within milliseconds.  Or an auto-update mode, perhaps something you can enable or disable in an X-Plane preference.  Of course, this would most likely come at the expense of performance.

From a development perspective, what would you say is the biggest change going from X-Plane 11 to 12? What kind of impact has it had?

Honestly, I largely missed that transition, and I probably don’t have a very well informed or nuanced take on it. I was less active in Thranda over the last 3 years. We published about a dozen planes or updates during that time, but I largely delegated much of that work to Erick and NoJoe.  Coming back now to XP12, I am delighted to see the improved visuals, the lighting engine, seasons, faster load times, more optimized rendering engine, improved usability, and the markedly accelerated pace of development by Laminar. I’m also keeping an eye on the usage statistics, and they look encouraging as well. No real drastic growth, but slow and steady.  It took a while to get going, but now I feel it has some serious momentum, and I’m looking forward to what it will allow us to do in the future.  With the way MSFS2020 was clobbering us, there were moments where I thought X-Plane was a lost cause.  It was becoming very difficult to even stay afloat, but that might have also partially been because of my 3-year distraction.

With Microsoft Flight Simulator’s rise in popularity, do you see a shift in the market, or do you think X-Plane still has a strong niche?

You know what? I actually think this might largely depend on what developers and end-users choose to do. I have felt a LOT of support from our customers. People have written to me privately, asking how they can help… people who noticed my absence on the forums have jumped in on the forums, and have helped fellow simmers on a volunteer basis!  People have offered to work for free, and even donate to Thranda.  People talk about starting a GoFundMe campaign, in order to see a beloved plane brought back to life. There was a real sense that people on X-Plane.org value the community, the developers that stick around, and the passion and camaraderie we feel in the forums, and I really think it’s very valuable to many people.  And I believe this is something generally lacking in the MSFS world.

I dipped my toes into the development process of MSFS and actually got somewhere… it seemed possible to develop for MSFS as well. BUT there were a few things that ended up causing what I perceived to be severe friction.  One was the very different, unoverviewable development style that I’m not used to. The other was, that MSFS doesn’t seem shy to implement sweeping changes that affect and potentially break products.  Another is, that I just can’t seem to befriend the new “streaming” platform.  Then there’s the community… or lack thereof.  And, of course, the other thing that always sits in the back of my mind is, how MS tends to just shut down a project if they deem that it’s not financially worthwhile.  MS Flight was one of those things that isn’t too trust-inspiring. Observing the Steam stats, it seems that MSFS2024 is falling, and is dragging MSFS2020 down with it.  If this trajectory continues, it would seem as though the option to pull the plug on it might become increasingly likely… but nobody knows where that threshold is, or if they’d even pull the plug this time around. It seems that MSFS is a single big shiny billboard for a lot of Microsoft’s latest and greatest technologies.  If that is indeed MSFS’s role, I could speculate that Microsoft would be more likely to keep it alive, even if they incur losses, because of the way in which it showcases their tech.  Even so, I’d find it a bit unnerving to develop for that platform, given its history.

Overall, I do believe X-Plane has a strong niche.  I bet my business on X-Plane being the “Tinkerer’s sim of choice”. I tend to perceive X-Plane as being the sim with the more friendly, flexible, clean, organized development environment, allowing us dev’s to experiment, and passing these tinker-bits on to our clients.  I love doing that.  If I were to imagine establishing the Thranda brand in MSFS, I wouldn’t want to do it without this aspect of Thranda remaining intact… but the more I found out about MSFS, the more difficult this seems to be to pull off.  Now, granted: X-Plane’s pool of users is around 1/10th of MSFS’s, and that’s not counting the Xbox crowd.  But as long as people appreciate and purchase our products, we can continue on developing for X-Plane.  And I believe that if we DO continue to develop for X-Plane, the sim will remain afloat, and possibly even grow.  The more developers drop out, and the more users give up on the sim, the more likely it is to actually fail.  It’s like a “self-fulfilling prophecy.” 

Why do you think the Org has remained the number one “go-to” site for X-Plane enthusiasts for so long? What makes it so special in your opinion?

The Org is a special environment.  It has gone through adversity, vicious and slanderous attacks, and all the while, was never wholeheartedly endorsed by Laminar, which I think is so weird, because without the Org, Laminar would not have nearly as vibrant and active a user base, which would probably really be bad for their business and brand.  But Austin will Austin.  

There’s over a million users on the .org last time I checked, and as I mentioned before, it’s a community of people that come together and help one another, expressing true passion and love for the hobby, and even extend a helping hand to struggling developers.  I went through a time where a (non-Org) competitor would sabotage and slander our products, sign in with half a dozen (or more) sock puppet accounts, and  pretend to be a disgruntled client, trying to destroy my reputation.  Somehow Thranda survived that… and I think it is a testament to the way in which the Org community came alongside us, stood up for us, and helped get to the bottom of this shady stuff.   I’ve made my share of blunders and mistakes as well, but the community has been amazing at making it a pleasant environment, where toxic behaviour is not given a chance to grab much of a foothold, and overall, friendliness and helpfulness and professionalism is more common than not.

How important is the link between the Org’s community and the models you create? Are you concerned about potential disruption caused by the X-Plane store?

As far as I currently understand the situation, no, I’m not too concerned. The Org community hosts the website, manages the community, and the revenue from the .org store makes this possible.  Our products will most likely not even be compatible with Laminar’s in-sim store copy-protection infrastructure, and as far as I can tell, the vast majority of developers are in the same boat.   It IS possible that developers end up making products that can be purchased in-sim, but my guess is that the Org and its store will continue to be a strong ecosystem, not least because of its excellent support infrastructure and friendly community.  We never felt the need to have our own dedicated support ticket system, because we saw the forums as being a place that had answers, where people would land if they googled stuff on the problems they may be experiencing, and would easily find solutions and be able to join in discussions about those issues, and would be welcomed into a group of helpful fellow enthusiasts. This entire community dynamic seems to be entirely lacking in Laminar’s push for an in-sim store.  Also, nobody from Laminar ever asked us developers how we feel about it. There was a time where I was really wondering about all of this… I was asking myself if, given that MSFS has such massive advantages over X-Plane (with Azure, AI, Bing, DirectX, Asobo infrastructure, Xbox support, a MASSIVE development team, PLUS the in-sim store), what if the in-sim store idea might have looked like the “lowest-hanging fruit” from Laminar’s perspective?   Personally, I’d prefer seeing Laminar concentrate on some of the other bottlenecks in the sim.  MSFS is an amazing sim, and Laminar better do some pretty big stuff FAST to stay competitive.

When you’re not busy developing new models for us to enjoy, what do you like to do in your spare time? And please don’t say you fly X-Plane!

My wife and I travel a lot.  We are always part of special community projects around here, like a film festival coming up, and we like keeping our eyes peeled for worthwhile opportunities to serve, be it overseas or closer to home.  I just came back from a Men’s retreat, where I realized that Thranda has served as an excuse to mentor several young men into leadership positions.  We also love supporting community projects (such as schools, radio stations, inner city youth projects, etc.)

But actually, since working in simulation, I have grown very interested in philosophy as well… specifically, the simulation hypothesis, championed by Nick Bostrom, Werner Gitt, Michael Jones, and other philosophers and cosmologists. It’s a very interesting notion to consider the reality in which we live could possibly be an information construct, as opposed to a purely material existence.  No matter where you look, information is at the core of everything… even the quantum world, black hole physics, biology, origin of life, Big Bang cosmology,  points to there being information at the core.  It’s fascinating.

Finally, if you could go back and give yourself one piece of advice when you first started developing for X-Plane, what would it be?

I don’t know if there’s really that much to say. The Dan that started this journey 15 years ago was definitely NOT very confident that this would work out the way it has been. I think “future Dan” talking to “past Dan” would have seemed unbelievably encouraging and positive to “past Dan”.  Thranda has taken the trajectory it has taken, and it seems to me that only lately am I developing a clearer sense of where the bottlenecks really are, and how to address them.  I might have told my younger self to concentrate more on infrastructure and on programming… but younger Dan might have just gone, “Huh?”  

But overall, I have learned so very much through this journey, and so many people came alongside me, which I am so thankful and appreciative of… I’ve gotten to know so many wonderful, talented, and generous people, and without them, there wouldn’t even be a Thranda today.  

One of the most important things is probably, I’ve learned to take more risks, and to be fine with it, if those risks don’t exactly pan out.  You gain either way: if you don’t win, you gain experience, and that is worth something as well.  

A huge thank you to Dan for taking the time to share his journey with us. It’s been a fascinating insight into Thranda, X-Plane development, and the passion behind it all!